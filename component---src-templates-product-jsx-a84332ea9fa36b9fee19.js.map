{"version":3,"sources":["webpack:///./src/templates/product.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/PostInfo/index.jsx"],"names":["PostTemplate","props","_this","_React$Component","call","this","state","mobile","handleResize","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","render","slug","pageContext","postNode","data","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","coverHeight","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","siteTitle","rel","href","siteUrl","type","_components_SEO__WEBPACK_IMPORTED_MODULE_11__","postPath","postSEO","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","templateKey","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","category","_components_PostCover__WEBPACK_IMPORTED_MODULE_8__","moment","date","format","dateFormat","dangerouslySetInnerHTML","__html","html","_components_PostTags__WEBPACK_IMPORTED_MODULE_7__","tags","_components_SocialLinks__WEBPACK_IMPORTED_MODULE_10__","React","Component","pageQuery","SEO","description","image","postURL","_this$props","postMeta","excerpt","urljoin","cover","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","JSON","stringify","property","siteFBAppID","userTwitter","PostCover","fileEdges","coverClassName","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","length","react_default","gatsby_image_default","fluid","outerWrapperClassName","style","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","gatsby_browser_entry","query","PostCoverComponent","allFile","edges","_4118773653","PostTags","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","SocialLinks","iconSize","react_share__WEBPACK_IMPORTED_MODULE_2__","quote","react_share__WEBPACK_IMPORTED_MODULE_3__","round","size","react_share__WEBPACK_IMPORTED_MODULE_4__","count","renderShareCount"],"mappings":"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","file":"component---src-templates-product-jsx-a84332ea9fa36b9fee19.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostTags from \"../components/PostTags\";\nimport PostCover from \"../components/PostCover\";\nimport PostInfo from \"../components/PostInfo\";\nimport SocialLinks from \"../components/SocialLinks\";\n// import PostSuggestions from \"../components/PostSuggestions\";\n\nimport SEO from \"../components/SEO\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport config from \"../../data/SiteConfig\";\nimport \"./post.scss\";\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { slug } = this.props.pageContext;\n    // const expanded = !mobile;\n    // const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <Layout location={this.props.location}>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n            <link href=\"/logos/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n        <header className=\"hn-bg-heading\">\n          <div className=\"bg_cover\">\n          <div className=\"container post-title hn-breadcrumbs \">\n            <h1 className=\"display-4 text-uppercase text-left text-white\">{post.title}</h1>\n            <p>\n              <Link\n                className=\"text-white\"\n                // to={`/hainamer/${_.kebabCase(post.category)}`}\n                to={`/${post.templateKey}/${_.kebabCase(post.category)}`}\n              >\n                {post.category}\n              </Link>\n            </p>\n          </div>\n          </div>\n          \n        </header>\n         \n        <div className=\"row container mb-4\">\n          {/* Post Content Column */}\n          <div className=\"col-lg-8\">\n            <div className=\"post-page-contents\">\n              {/* <h1 className=\"\">{post.title}</h1> */}\n              <div className=\"pb-3\">\n                <PostCover\n                  postNode={postNode}\n                  coverHeight={coverHeight}\n                />\n              </div>\n              <div className=\"\">\n                {`${moment(postNode.frontmatter.date).format(\n                  config.dateFormat\n                )}`}\n              </div>\n              {/* <PostInfo postNode={postNode} /> */}\n              <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              <hr />\n              <div className=\"row\">\n                <PostTags tags={post.tags} className=\"col\" />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={this.state.mobile}\n                  className=\"col\"\n                />\n              </div>\n            </div>\n\n          </div>\n          {/* Related Post Column */}\n          <div className=\"col-lg-4 bg-light\">\n            <p>Related Post Column</p>\n          </div>\n          {/* <PostSuggestions postNode={postNode} /> */}\n        </div>\n\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query ProductBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        shortDesc\n        cover\n        date\n        category\n        tags\n        templateKey\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      // image = postMeta.cover;\n      // postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n      image = urljoin(config.siteUrl, \"/assets\", postMeta.cover);\n      postURL = urljoin(config.siteUrl, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      // image = config.siteLogo;\n      image = urljoin(config.siteUrl, config.siteLogo);\n    }\n    // image = urljoin(config.siteUrl, \"/assets\", image);\n    // const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n\n    const blogURL = config.siteUrl;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if ((\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      ) \n      || (fileNode.node.absolutePath.indexOf(post.cover) !== -1)\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 2568) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n\n        \n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"col social-links\">\n        <small>Tags: </small> {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n            <span className=\"badge badge-pill badge-light border\">{tag}</span>\n              {/* <Chip label={tag} className=\"post-preview-tags\" /> */}\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  FacebookShareCount,\n  FacebookIcon,\n\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    // const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const url = urljoin(config.siteUrl, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links col right\"><small>Share: </small>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostInfo.scss\";\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n        {`${moment(postNode.frontmatter.date).format(\n            config.dateFormat\n          )}`}\n        </div>\n        <div className=\"col\">\n        <Link\n          className=\"category-link\"\n          // to={`/hainamer/${_.kebabCase(post.category)}`}\n          to={`/${post.templateKey}/${_.kebabCase(post.category)}`}\n        >\n          {post.category}\n        </Link>\n        </div>\n      </div>\n     \n    );\n  }\n}\n\nexport default PostInfo;\n"],"sourceRoot":""}