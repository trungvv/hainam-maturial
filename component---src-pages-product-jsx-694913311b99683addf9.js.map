{"version":3,"sources":["webpack:///./src/components/ProductPreview/index.jsx","webpack:///./src/components/ProductList/index.jsx","webpack:///./src/pages/product.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/index.jsx"],"names":["ProductPreview","render","productInfo","this","props","console","log","react_default","a","createElement","className","key","title","gatsby_browser_entry","to","path","src","cover","alt","category","shortDesc","React","Component","ProductList","getProductList","productList","productEdges","forEach","product","push","node","fields","slug","frontmatter","date","map","components_ProductPreview","Product","data","allMarkdownRemark","content","SEO","postEdges","edges","components_ProductList","layout","location","Helmet_default","config","siteTitle","rel","href","siteUrl","productQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","excerpt","urljoin","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-pages-product-jsx-694913311b99683addf9.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nclass ProductPreview extends React.Component {\n    render() {\n        const {productInfo} = this.props;\n        console.log(productInfo);\n        return (\n            <div className=\"col col-sm-6 col-md-4 col-lg-3\">\n                <div className=\"card\" key={productInfo.title}>\n                    <Link to={productInfo.path}>\n                        <div className=\"custom-card-img\">\n                            <img className=\"card-img-top\" src={productInfo.cover} alt=\"Card image cap\" />\n                        </div>\n                    </Link>\n                    <div className=\"card-body\">\n                        <Link to={productInfo.path}>\n                            <h5 className=\"media-title\">{productInfo.title}</h5>\n                        </Link>\n                        <p className=\"card-subtitle\">\n                            <small className=\"text-muted\">{productInfo.category}</small>\n                        </p>\n                        <div className=\"overflow-hidden\">\n                            <p className=\"card-text text-justify\">{productInfo.shortDesc}</p>\n                        </div>\n                    </div>\n                    \n                </div>\n                \n            </div>\n        );\n    }\n}\nexport default ProductPreview;","import React from \"react\";\nimport ProductPreview from \"components/ProductPreview\";\n\nclass ProductList extends React.Component {\n    getProductList() {\n        const productList = [];\n        this.props.productEdges.forEach(product => {\n            productList.push({\n                path: product.node.fields.slug,\n                cover: product.node.frontmatter.cover,\n                title: product.node.frontmatter.title,\n                category: product.node.frontmatter.category,\n                shortDesc: product.node.frontmatter.shortDesc,\n                date: product.node.fields.date,\n                slug: product.node.fields.slug,\n            });\n        });\n        return productList;\n    }\n    render() {\n        const productList = this.props.productEdges? this.getProductList() : null;\n        if (productList) {\n            return (\n                <div>\n                    {productList.map(product => (\n                        <div className=\"row\">\n                            <ProductPreview key={product.title} productInfo={product}/>\n                            \n                        </div>\n                    ))}\n                </div>\n            );\n        } \n    }\n}\n\nexport default ProductList;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport ProductList from \"components/ProductList\";\nimport SEO from \"../components/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nclass Product extends React.Component {\n  render() {\n    const data = this.props.data.allMarkdownRemark;\n    \n    const content = data ? \n      <div>\n        <SEO postEdges={data.edges} /> \n        <ProductList productEdges={data.edges}/>\n        \n      </div>\n    : <h1>Khong co du lieu</h1>\n  \n    \n    return (\n      <Layout location={this.props.location} title=\"Sản phẩm\">\n        <div className=\"index-container\">\n          <Helmet>\n            <title>{'Sản phẩm'|config.siteTitle}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}`} />\n          </Helmet>\n          {content}\n\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Product;\n\nexport const productQuery = graphql`\n  query productQuery {\n    allMarkdownRemark(\n      filter: {frontmatter: {templateKey: {eq: \"product\"}}},\n      limit: 50\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            cover\n            category\n            shortDesc\n          }\n        }\n      }\n    }\n  }\n`;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}