{"version":3,"sources":["webpack:///./src/templates/service.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/SectionService/index.js"],"names":["PricingTemplate","props","_this","_React$Component","call","this","state","mobile","handleResize","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","render","slug","pageContext","servicesHome","data","postNode","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","siteTitle","rel","href","siteUrl","type","_components_SEO__WEBPACK_IMPORTED_MODULE_10__","postPath","postSEO","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","templateKey","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","category","dangerouslySetInnerHTML","__html","html","_components_PostTags__WEBPACK_IMPORTED_MODULE_7__","tags","_components_SocialLinks__WEBPACK_IMPORTED_MODULE_8__","components_SectionService__WEBPACK_IMPORTED_MODULE_9__","serviceTitle","React","Component","pageQuery","SEO","description","image","postURL","_this$props","postMeta","excerpt","urljoin","cover","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","JSON","stringify","property","siteFBAppID","userTwitter","PostTags","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","SocialLinks","iconSize","react_share__WEBPACK_IMPORTED_MODULE_2__","quote","react_share__WEBPACK_IMPORTED_MODULE_3__","round","size","react_share__WEBPACK_IMPORTED_MODULE_4__","count","filter","renderShareCount","SectionService","_ref","_ref$serviceTitle","_ref$serviceSubtitle","serviceSubtitle","items","edges","length","forEach","service","node","shortDesc","date","fields","slides","i","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-templates-service-jsx-d8187fa1a374292d6acb.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostTags from \"../components/PostTags\";\nimport SocialLinks from \"../components/SocialLinks\";\nimport SectionService from 'components/SectionService'\nimport SEO from \"../components/SEO\";\nimport _ from \"lodash\";\nimport config from \"../../data/SiteConfig\";\nimport \"./post.scss\";\n\nexport default class PricingTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { slug } = this.props.pageContext;\n    const { data: {servicesHome}} = this.props;\n    // const expanded = !mobile;\n    // const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <Layout location={this.props.location}>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n            <link href=\"/logos/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n        <header className=\"hn-bg-heading\">\n          <div className=\"bg_cover\">\n          <div className=\"container post-title hn-breadcrumbs \">\n            <h1 className=\"display-4 text-left text-white\">{post.title}</h1>\n            <p>\n              <Link\n                className=\"text-danger text-uppercase\"\n                // to={`/hainamer/${_.kebabCase(post.category)}`}\n                to={`/${post.templateKey}/${_.kebabCase(post.category)}`}\n              >\n                {post.category}\n              </Link>\n            </p>\n          </div>\n          </div>\n          \n        </header>\n         \n        <div className=\"row container mb-4\">\n          {/* Post Content Column */}\n          <div className=\"col-lg-12\">\n            <div className=\"post-page-contents\">\n              <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              <hr />\n              <div className=\"row\">\n                <PostTags tags={post.tags} className=\"col\" />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={this.state.mobile}\n                  className=\"col\"\n                />\n              </div>\n            </div>\n\n          </div>\n        </div>\n        {/* Dịch vụ tiêu biểu */}\n\n          <SectionService serviceTitle=\"Dịch vụ tiêu biểu\"  servicesHome={servicesHome}/>\n\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query ServiceBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        shortDesc\n        cover\n        date\n        category\n        tags\n        templateKey\n      }\n    }\n    ...SectionServiceFragment\n  }\n`;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      // image = postMeta.cover;\n      // postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n      image = urljoin(config.siteUrl, \"/assets\", postMeta.cover);\n      postURL = urljoin(config.siteUrl, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      // image = config.siteLogo;\n      image = urljoin(config.siteUrl, config.siteLogo);\n    }\n    // image = urljoin(config.siteUrl, \"/assets\", image);\n    // const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n\n    const blogURL = config.siteUrl;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"col social-links\">\n        <small>Tags: </small> {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n            <span className=\"badge badge-pill badge-light border\">{tag}</span>\n              {/* <Chip label={tag} className=\"post-preview-tags\" /> */}\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  FacebookShareCount,\n  FacebookIcon,\n\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    // const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const url = urljoin(config.siteUrl, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links col right\"><small>Share: </small>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React, { Component } from 'react'\n// import { withNamespaces } from 'react-i18next'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport './style.scss'\n\nconst SectionService = ({serviceTitle=null, serviceSubtitle=null, servicesHome}) => {\n\n  const items = [];\n  if (servicesHome.edges.length >0) {\n    servicesHome.edges.forEach(service => {\n      items.push({\n          id: service.node.id,\n          cover: service.node.frontmatter.cover,\n          title: service.node.frontmatter.title,\n          category: service.node.frontmatter.category,\n          shortDesc: service.node.frontmatter.shortDesc,\n          excerpt: service.node.excerpt,\n          date: service.node.fields.date,\n          slug: service.node.fields.slug,\n          position: service.node.frontmatter.position,\n          // templateKey: postEdge.node.frontmatter.templateKey,\n      });\n  });\n  }\n    const slides = servicesHome? items.map((item, i=0) => {\n      ++i;\n      return (\n        <div className=\"col-md-6 col-lg-4 \" key={i}>\n          <div className=\"media border media-style\">\n            <div className=\"mr-3 btn rounded-circle bg-secondary num\">\n              {i}\n            </div>\n            <div className=\"media-body\">\n              <h3 className=\"media-title\">\n              <Link to={item.slug}>\n                {item.title}\n              </Link>\n                \n              </h3>\n\n              <div className=\"overflow-hidden\">\n                <p className=\"media-text text-justify\">{item.shortDesc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    })\n    : <p>Chưa có dịch vụ nào</p>\n\n    return (\n      <div className=\"jumbotron container-fluid rounded-0 mb-0\" id=\"service\">\n        <h1 className=\"display-4 text-center\">\n          {/* {t('service-title')} */}\n          {serviceTitle}\n        </h1>\n\n        <p className=\"lead text-center\">\n          {/* {t('service-subtitle')} */}\n          {serviceSubtitle}\n        </p>\n\n        <hr className=\"line bg-secondary\" />\n        {/* <div className=\"container-fluid\"> */}\n        <div className=\"row mt-5 container\">{slides}</div>\n\n      </div>\n    )\n  }\n\n\n// export default withNamespaces('translation')(SectionService)\nexport default SectionService;\n\nexport const queryServiceHome = graphql`\n  fragment SectionServiceFragment on Query {\n    servicesHome: allMarkdownRemark(\n      filter: {frontmatter: {templateKey: {eq: \"service\"}, active: {eq: true}}},\n      limit: 10\n      sort: { fields: [frontmatter___position], order: ASC }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          id\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            cover\n            category\n            shortDesc\n            templateKey\n            active\n            position\n          }\n        }\n      }\n    }\n  }`\n\n"],"sourceRoot":""}