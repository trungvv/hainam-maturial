{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","title","charAt","toUpperCase","slice","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","type","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","coverHeight","react_default","key","gatsby_browser_entry","to","path","PostCover","postNode","moment","date","format","dateFormat","excerpt","PostListing","getPostList","postList","forEach","postEdge","push","node","fields","slug","tags","frontmatter","cover","timeToRead","templateKey","map","post","components_PostPreview"],"mappings":"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","file":"component---src-templates-tag-jsx-3ebe4e1baa2bf2f2ce32.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={`Tagged in ${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\n      >\n        <div className=\"tag-container\">\n          <Helmet>\n            <title>{`Posts tagged as \"${tag}\" | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/tags/${tag}`} />\n            <link href=\"/logos/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\n\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <div className=\"col-lg-4 col-md-6 mt-4 mb-4\">\n                <div className=\"card\" key={postInfo.title}>\n                    <Link to={postInfo.path}>\n                        <PostCover postNode={postInfo} coverHeight={coverHeight} />\n                    </Link>\n                    <div className=\"card-body\">\n                        <Link to={postInfo.path}>\n                            <h5 className=\"media-title\">{postInfo.title}</h5>\n                        </Link>\n                        <p className=\"card-subtitle\">\n                            <small className=\"text-muted\">\n                              {moment(postInfo.date).format( config.dateFormat)}\n                            </small>\n                        </p>\n                        <div className=\"overflow-hidden\">\n                            <p className=\"card-text text-justify\">{postInfo.excerpt}</p>\n                        </div>\n                    </div>\n                    \n                </div>\n                \n            </div>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        templateKey: postEdge.node.frontmatter.templateKey,\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}