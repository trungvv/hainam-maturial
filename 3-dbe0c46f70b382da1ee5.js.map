{"version":3,"sources":["webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["PostCover","render","_this$props","this","props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","cover","length","react_default","a","createElement","gatsby_image_default","fluid","outerWrapperClassName","style","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","className","Component","queryWrapper","gatsby_browser_entry","query","data","PostCoverComponent","allFile","edges","_590853412"],"mappings":"mLAmDeA,oGA7CbC,kBAAS,IAAAC,EACsDC,KAAKC,MAA1DC,EADDH,EACCG,UAAWC,EADZJ,EACYI,SAAUC,EADtBL,EACsBK,YAAaC,EADnCN,EACmCM,eACpCC,EAAOH,EAASI,YAAcJ,EAASI,YAAcJ,EACrDK,EAAgBN,EAAUO,OAAO,SAAAC,GACrC,OAAsC,OAAlCA,EAASC,KAAKC,mBAKT,IAFPF,EAASC,KAAKE,aAAaC,QACzBC,IAAKC,KAAK,kBAAmBV,EAAKW,UAGkB,IAApDP,EAASC,KAAKE,aAAaC,QAAQR,EAAKW,UAO9C,GAA6B,IAAzBT,EAAcU,OAChB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,MAAOf,EAAc,GAAGG,KAAKC,gBAAgBW,MAC7CC,sBAAuBnB,EACvBoB,MAAO,CAAEC,OAAQtB,EAAauB,MAAO,UAM3C,IAAMC,EAC2B,MAA/BtB,EAAKW,MAAMY,UAAU,EAAG,GACpBC,GAAkBxB,EAAKW,MACvBX,EAAKW,MACX,OACEE,EAAAC,EAAAC,cAAA,OACEI,MAAO,CACLM,gBAAe,OAASH,EAAT,IACfF,OAAWtB,EAAL,MAER4B,UAAW3B,QAxCK4B,cCDlBC,4FACJpC,kBAAS,IAAAC,EAC2CC,KAAKC,MAA/CE,EADDJ,EACCI,SAAUC,EADXL,EACWK,YAAaC,EADxBN,EACwBM,eAC/B,OACEc,EAAAC,EAAAC,cAACc,EAAA,YAAD,CACEC,MAAK,YAsCLtC,OAAQ,SAAAuC,GAAI,OACVlB,EAAAC,EAAAC,cAACiB,EAAD,CACEpC,UAAWmC,EAAKE,QAAQC,MACxBrC,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,KA5CtBgC,KAAAI,QAJqBR,aAwDZC","file":"3-dbe0c46f70b382da1ee5.js","sourcesContent":["import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if ((\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      ) \n      || (fileNode.node.absolutePath.indexOf(post.cover) !== -1)\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n\n        \n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n"],"sourceRoot":""}